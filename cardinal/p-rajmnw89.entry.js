import{r as t,g as e}from"./p-9835b40a.js";import{T as o}from"./p-353f2ea7.js";import{a as s}from"./p-72de6249.js";import{C as i}from"./p-ec895615.js";import{B as n}from"./p-88fbacf2.js";var r=function(t,e,o,s){var i,n=arguments.length,r=n<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,o,s);else for(var l=t.length-1;l>=0;l--)(i=t[l])&&(r=(n<3?i(r):n>3?i(e,o,r):i(e,o))||r);return n>3&&r&&Object.defineProperty(e,o,r),r};const l=class{constructor(e){t(this,e),this.templateModel=null,this.currentTemplateViews=[],this.emptyListPlaceholder=null,this.dataViewModel=null}render(){this.__renderFormTemplateContent.call(this)}__renderFormTemplateContent(){const t=this.__getTemplateContent.call(this);if(null===t)return console.error("[psk-for-each] Template content for the component is not defined"),null;if(!this.parentChain||!this.rootModel)return null;let e=t.content.children;for(let s=0;s<e.length;s++)if(e[s].hasAttribute("slot")&&"no-data"===e[s].getAttribute("slot")){this.emptyListPlaceholder=e[s].cloneNode(!0),t.content.removeChild(e[s]);break}let o=this.parentChain,i=this.rootModel;this.templateModel=i.getChainValue(o),i.onChange(o,()=>{this.templateModel=i.getChainValue(o)});let n=this.__host.parentElement;for(n.shadowRoot?null!==n.shadowRoot.querySelector("slot")&&(n=n.shadowRoot.querySelector("slot").parentElement):null!==n.querySelector("slot")&&(n=n.querySelector("slot").parentElement);this.currentTemplateViews.length>0;){let t=this.currentTemplateViews.pop();n.contains(t)&&n.removeChild(t)}if(!n.shadowRoot&&s(n.tagName)&&n.attachShadow({mode:"open"}),this.templateModel.length>0)for(let s=0;s<this.templateModel.length;++s)this.__appendTemplateItem.call(this,`${o}.${s}.`,t.content.cloneNode(!0),n);else this.emptyListPlaceholder?this.__appendNodeInParent(this.emptyListPlaceholder,n):console.log("No data to iterate")}__getTemplateContent(){return this.__host.querySelector("template")||null}__processNode(t,e){let o=Array.from(t.attributes).filter(t=>t.name.startsWith("view-model-"));o.forEach(o=>{const s=o.name.split("view-model-")[1];t.setAttribute(s,this.rootModel.getChainValue(e?`${e}${o.value}`:o.value))}),(o=Array.from(t.attributes).filter(t=>t.value.startsWith("@"))).forEach(o=>{const s=o.value.split("@")[1];t.setAttribute(o.name,this.rootModel.getChainValue(e?`${e}${s}`:s))}),Array.from(t.children).forEach(t=>{this.__processNode.call(this,t,e)})}__appendTemplateItem(t,e,o){let s=e.querySelectorAll("[view-model]");Array.from(e.children).forEach(e=>{this.__processNode.call(this,e,t)}),s.forEach(e=>{const o=`${t}${e.getAttribute("view-model")}`;e.setAttribute("view-model",o),e.setAttribute("get-model","get-model")}),Array.from(e.childNodes).forEach(t=>{this.__appendNodeInParent(t,o)})}__appendNodeInParent(t,e){this.currentTemplateViews.push(t),e.shadowRoot?e.shadowRoot.append(t):e.append(t)}get __host(){return e(this)}};r([i(),n()],l.prototype,"templateModel",void 0),r([o({description:["This property is the name of the model which will be used to generate the form. The model should be a JavaScript array.",'All the information about how to write a model, hot to use the two-way binding and how to use the model with this component cand be found in the documentation found at: <psk-link page="forms/using-forms">Using forms</psk-link>'],isMandatory:!1,propertyType:"string",specialNote:["If this property is not provided, nothing written inside the component's template will be displayed."]})],l.prototype,"dataViewModel",void 0);export{l as psk_for_each};